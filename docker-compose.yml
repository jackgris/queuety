services:
  queuety:
    build:
      context: .
      dockerfile: Dockerfile
    image: queuety:latest
    container_name: queuety
    restart: unless-stopped
    ports:
      - "9845:9845"
    environment:
      - PORT=9845
    # volumes:
    #   - ./config:/app/config:ro
    #   - ./logs:/app/logs
    networks:
      - queuety-network
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 40s

  # Uncomment if you need Redis for queue functionality
  # redis:
  #   image: redis:7-alpine
  #   container_name: queuety-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - queuety-network
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # Uncomment if you need PostgreSQL for persistence
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: queuety-postgres
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: queuety
  #     POSTGRES_USER: queuety
  #     POSTGRES_PASSWORD: queuety_password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #     - ./migrations:/docker-entrypoint-initdb.d
  #   networks:
  #     - queuety-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U queuety"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

networks:
  queuety-network:
    driver: bridge

#volumes:
#  redis-data:
#    driver: local
#  postgres-data:
#    driver: local
