# golangci-lint configuration
# Documentation: https://golangci-lint.run/usage/configuration/
version: "2"
run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - vendor
    - .git
    - bin
    - tmp
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*_gen\\.go$"
    - ".*mock.*\\.go$"
  go: "1.24"  # Updated to match queuety's go.mod

linters:
  disable-all: true
  enable:
    # Core linters (enabled by default)
    - errcheck
    - gosimple  # Part of staticcheck
    - govet
    - ineffassign
    - staticcheck
    - typecheck  # Critical for type safety
    - unused

    # Code quality
    - bodyclose
    - contextcheck
    - dupl
    - durationcheck
    - errorlint
    - exhaustive
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - goimports  # Import formatting
    - goprintffuncname
    - gosec
    - lll
    - misspell
    - nakedret
    - nilerr
    - nilnil
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - revive
    - unconvert
    - unparam
    - wastedassign
    - whitespace

    # Modern Go linters
    - gofumpt  # Stricter formatting than gofmt
    - gci      # Import grouping
    - godox    # TODOs and FIXMEs
    - grouper  # Analyze expression groups
    - mnd      # Magic number detection

    # Performance and style
    - makezero
    - testpackage
    - thelper

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - (*os.File).Close
      - (*database/sql.Rows).Close

  govet:
    enable-all: true
    disable:
      - fieldalignment  # Can be too strict for readability
    settings:
      shadow:
        strict: false

  gocyclo:
    min-complexity: 12  # Slightly lower for better maintainability

  goconst:
    min-len: 3          # Minimum string length
    min-occurrences: 2  # At least 2 occurrences
    match-constant: true
    numbers: true       # Check for duplicate numbers too

  gofumpt:
    lang-version: "1.24"
    extra-rules: true

  goimports:
    local-prefixes: github.com/tomiok/queuety

  gci:
    sections:
      - standard                           # Standard library
      - default                            # External packages
      - prefix(github.com/tomiok/queuety)  # Local packages
      - blank                              # Blank imports
      - dot                                # Dot imports

  misspell:
    locale: US
    ignore-words:
      - queuety  # Project name

  lll:
    line-length: 120
    tab-width: 4

  nakedret:
    max-func-lines: 20  # Stricter naked returns

  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - ifElseChain    # Can make code less readable
      - singleCaseSwitch
      - commentedOutCode

  gosec:
    severity: medium
    confidence: medium
    excludes:
      - G204  # Subprocess with variable (common in CLI tools)
      - G304  # File path from variable (common in config)

  revive:
    min-confidence: 0.8
    rules:
      - name: atomic
      - name: line-length-limit
        arguments: [120]
      - name: time-naming
      - name: var-declaration
      - name: unexported-return
      - name: errorf
      - name: blank-imports
      - name: context-as-argument
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: indent-error-flow
      - name: superfluous-else
      - name: unreachable-code
      - name: unused-parameter

  mnd:
    checks:
      - argument
      - case
      - condition
      - operation
      - return
      - assign
    ignored-numbers:
      - '0'
      - '1'
      - '2'
      - '3'
      - '10'
      - '60'    # Common for timeouts
      - '1024'  # Buffer sizes
      - '2048'  # Buffer sizes (like in queuety)
    ignored-functions:
      - strings.SplitN
      - make
      - time.Duration

  godox:
    keywords:
      - NOTE
      - OPTIMIZE
      - HACK
      - TODO
      - FIXME
      - BUG

  testpackage:
    skip-regexp: (export|internal)_test\.go

  thelper:
    test:
      first: true
      name: true
      begin: true

  staticcheck:
    checks: ["all"]

  grouper:
    const-require-single-const: false
    var-require-single-var: false
    import-require-single-import: false
    type-require-single-type: false

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  new: false
  fix: false

  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - gocognit
        - mnd
        - lll
        - unparam
        - goconst

    # Exclude some linters from main.go (often has different patterns)
    - path: main\.go
      linters:
        - gochecknoinits

    # Exclude staticcheck SA9003 (empty branch)
    - linters:
        - staticcheck
      text: "SA9003:"

    # Exclude long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

    # Allow TODO/FIXME comments in development
    - linters:
        - godox
      source: "// TODO|FIXME"

    # Exclude magic numbers in configuration/constants
    - path: (config|constants)\.go
      linters:
        - mnd

  exclude:
    # Exclude some default excludes that might be too aggressive
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*print(f|ln)?|os\\.(Un)?Setenv). is not checked"

output:
  formats:
    - format: colored-line-number
      path: stdout
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true

severity:
  default: error
  case-sensitive: false
  rules:
    - linters:
        - dupl
        - godox
      severity: info
    - linters:
        - gocritic
        - gosec
      severity: warning